{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\dev\\\\expo\\\\lp_engenharia_expo\\\\src\\\\pages\\\\Login\\\\index.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation } from '@react-navigation/native';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport api from \"../../config/api\";\nexport default function Login() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var validate = function validate() {\n    if (!email) {\n      Alert.alert(\"\", \"Erro: Necessário preencher o Usuário!\");\n      return false;\n    } else if (!password) {\n      Alert.alert(\"\", \"Erro Nessário preencher uma senha!\");\n      return false;\n    }\n  };\n\n  var loginSubmiteOffiLine = function loginSubmiteOffiLine() {\n    if (validate) {\n      if (email === \"admin\" && password === \"2828\") {} else {\n        alert(\"Sem permissão de acesso!\");\n        return false;\n      }\n    }\n  };\n\n  var loginSubmitOnLine = function loginSubmitOnLine() {\n    var req, result;\n    return _regeneratorRuntime.async(function loginSubmitOnLine$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('http://192.168.1.106:8080/login', {\n              method: 'POST',\n              body: JSON.stringify({\n                email: email,\n                password: password\n              }),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }));\n\n          case 2:\n            req = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(req.json());\n\n          case 5:\n            result = _context.sent;\n            console.log(result);\n\n            if (result.erro) {\n              Alert.alert(\"\", result.mensagem);\n            } else {\n              Alert.alert(\"\", result.mensagem);\n            }\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loginSubmitOnLine2 = function loginSubmitOnLine2() {\n    return _regeneratorRuntime.async(function loginSubmitOnLine2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(api.post('/login', {\n              email: email,\n              password: password\n            }).then(function (response) {\n              console.log(response);\n            }).catch(function (err) {\n              console.log(err.response);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var navigation = useNavigation();\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: styles.imgLogo,\n    source: require(\"../../../assets/login.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  })), React.createElement(TextInput, {\n    style: styles.inputForm,\n    placeholder: \"Usu\\xE1rio\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputForm,\n    placeholder: \"Senha\",\n    autoCorrect: false,\n    keyboardType: \"numeric\",\n    secureTextEntry: true,\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.btnSubmitForm,\n    onPress: loginSubmitOnLine2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.txtSubmitForm,\n    onPress: function onPress() {\n      navigation.navigate('Menu');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, \"Acessar\")), React.createElement(Text, {\n    style: styles.linkNewUser,\n    onPress: function onPress() {\n      navigation.navigate('RecoverPassword');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Esqueceu sua senha?\"), React.createElement(Text, {\n    style: styles.linkNewUser,\n    onPress: function onPress() {\n      navigation.navigate('NewUser');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Cadastrar\"));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: '#fff'\n  },\n  imgLogo: {\n    width: 200,\n    height: 200,\n    marginBottom: 70\n  },\n  inputForm: {\n    backgroundColor: \"#f7f8fc\",\n    width: \"90%\",\n    marginBottom: 15,\n    height: 50,\n    borderRadius: 6,\n    color: '#BD3804',\n    fontSize: 18,\n    padding: 10\n  },\n  btnSubmitForm: {\n    backgroundColor: '#BD3804',\n    width: '90%',\n    height: 50,\n    borderRadius: 6,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  txtSubmitForm: {\n    color: '#fff',\n    fontSize: 22\n  },\n  linkNewUser: {\n    marginTop: 25,\n    fontSize: 18,\n    color: '#BD3804'\n  }\n});","map":{"version":3,"sources":["C:/dev/expo/lp_engenharia_expo/src/pages/Login/index.js"],"names":["React","useState","useNavigation","api","Login","email","setEmail","password","setPassword","validate","Alert","alert","loginSubmiteOffiLine","loginSubmitOnLine","fetch","method","body","JSON","stringify","headers","req","json","result","console","log","erro","mensagem","loginSubmitOnLine2","post","then","response","catch","err","navigation","styles","container","imgLogo","require","inputForm","text","btnSubmitForm","txtSubmitForm","navigate","linkNewUser","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","width","height","marginBottom","borderRadius","color","fontSize","padding","marginTop"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport { Button, Text, View, Image, TextInput, TouchableOpacity, StyleSheet } from \"react-native\";\r\n\r\nimport {useNavigation} from '@react-navigation/native';\r\nimport { Alert } from \"react-native-web\";\r\nimport api from \"../../config/api\";\r\n\r\nexport default function Login(){\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const validate = () =>{\r\n        if(!email){\r\n            Alert.alert(\"\", \"Erro: Necessário preencher o Usuário!\");\r\n            return false;\r\n        }else if(!password){\r\n            Alert.alert(\"\", \"Erro Nessário preencher uma senha!\");\r\n            return false;\r\n        }\r\n    }\r\n    const loginSubmiteOffiLine = () => {\r\n        if(validate){\r\n            if(email === \"admin\" && password === \"2828\"){\r\n            \r\n            }else{\r\n                alert(\"Sem permissão de acesso!\");\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    const loginSubmitOnLine = async () => {\r\n        //const req = await fetch('http://localhost:8080/login', {\r\n        const req = await fetch('http://192.168.1.106:8080/login', {\r\n            method: 'POST',\r\n            body: JSON.stringify({email, password}),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        const result = await req.json();\r\n        console.log(result);\r\n\r\n        if(result.erro){\r\n            Alert.alert(\"\", result.mensagem);\r\n        }else{\r\n            Alert.alert(\"\", result.mensagem);\r\n        }\r\n    }\r\n    const loginSubmitOnLine2 = async() => {\r\n        await api.post('/login', {email, password})\r\n        .then((response) => {\r\n            console.log(response);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err.response);\r\n        })\r\n    }\r\n\r\n    const navigation = useNavigation();\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View>\r\n                <Image\r\n                    style={styles.imgLogo}\r\n                    source={require('../../../assets/login.png')} \r\n                />\r\n            </View>\r\n\r\n            <TextInput\r\n                style={styles.inputForm}\r\n                placeholder=\"Usuário\"\r\n                autoCapitalize=\"none\"\r\n                autoCorrect={false}\r\n                value={email}\r\n                onChangeText={ text => setEmail(text) }\r\n            />\r\n            <TextInput\r\n                style={styles.inputForm}\r\n                placeholder=\"Senha\"\r\n                autoCorrect={false}\r\n                keyboardType=\"numeric\"\r\n                secureTextEntry={true}\r\n                value={password}\r\n                onChangeText={ text => setPassword(text) }\r\n            />\r\n\r\n            <TouchableOpacity \r\n                style={styles.btnSubmitForm}\r\n                // onPress={loginSubmiteOffiLine}\r\n                onPress={loginSubmitOnLine2}\r\n                >\r\n                <Text \r\n                    style={styles.txtSubmitForm}\r\n                    onPress={() => {navigation.navigate('Menu')}}\r\n                >\r\n                    Acessar\r\n                </Text>\r\n            </TouchableOpacity>\r\n            <Text \r\n                style={styles.linkNewUser}\r\n                onPress={ () => {navigation.navigate('RecoverPassword')} }>\r\n                Esqueceu sua senha?</Text>\r\n            <Text\r\n                style={styles.linkNewUser}\r\n                onPress={ () => {navigation.navigate('NewUser')} }>\r\n                Cadastrar\r\n            </Text>\r\n        </View>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    \r\n    container: {\r\n        flex: 1, \r\n        justifyContent: \"center\", \r\n        alignItems: \"center\",\r\n        backgroundColor: '#fff'\r\n    },\r\n    imgLogo: { \r\n        width: 200,\r\n        height: 200,\r\n        marginBottom: 70\r\n    },\r\n    inputForm:{\r\n        backgroundColor: \"#f7f8fc\",\r\n        width: \"90%\",\r\n        marginBottom: 15,\r\n        height: 50,\r\n        borderRadius: 6,\r\n        color:'#BD3804',\r\n        fontSize: 18,\r\n        padding: 10,\r\n    },\r\n    btnSubmitForm:{\r\n        backgroundColor: '#BD3804',\r\n        width: '90%',\r\n        height: 50,\r\n        borderRadius: 6,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    txtSubmitForm:{\r\n        color: '#fff',\r\n        fontSize: 22\r\n    },\r\n    linkNewUser:{\r\n        marginTop: 25,\r\n        fontSize: 18,\r\n        color: '#BD3804',\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}